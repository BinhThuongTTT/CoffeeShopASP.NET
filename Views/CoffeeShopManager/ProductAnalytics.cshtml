@model CoffeeShopWeb.Models.ProductAnalyticsViewModel

@{
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    ViewData["Title"] = "Phân tích sản phẩm";
}

<div class="analytics-container">
    <div class="page-header">
        <h1><i class="fas fa-chart-pie"></i> Phân tích sản phẩm</h1>
        <p>Theo dõi hiệu suất và xu hướng bán hàng của các sản phẩm</p>
    </div>

    <!-- Products by Category Chart -->
    <div class="chart-section">
        <div class="chart-card">
            <div class="chart-header">
                <h3><i class="fas fa-tags"></i> Phân bố sản phẩm theo danh mục</h3>
            </div>
            <div class="chart-container">
                <canvas id="categoryChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Product Sales Performance -->
    <div class="chart-section">
        <div class="chart-card">
            <div class="chart-header">
                <h3><i class="fas fa-chart-bar"></i> Hiệu suất bán hàng sản phẩm</h3>
            </div>
            <div class="chart-container">
                <canvas id="salesChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Product Sales Table -->
    <div class="table-section">
        <div class="table-card">
            <div class="table-header">
                <h3><i class="fas fa-table"></i> Chi tiết bán hàng sản phẩm</h3>
            </div>
            <div class="table-container">
                @if (Model.ProductSales.Any())
                {
                    <table class="analytics-table">
                        <thead>
                            <tr>
                                <th>Tên sản phẩm</th>
                                <th>Số lượng bán</th>
                                <th>Doanh thu</th>
                                <th>Giá trung bình</th>
                                <th>Hiệu suất</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in Model.ProductSales.Take(10))
                            {
                                <tr>
                                    <td>
                                        <div class="product-name">
                                            <i class="fas fa-coffee"></i>
                                            @product.ProductName
                                        </div>
                                    </td>
                                    <td>
                                        <span class="quantity-badge">@product.TotalQuantitySold</span>
                                    </td>
                                    <td>
                                        <span class="revenue-amount">@product.TotalRevenue.ToString("C", new System.Globalization.CultureInfo("vi-VN"))</span>
                                    </td>
                                    <td>@product.AveragePrice.ToString("C", new System.Globalization.CultureInfo("vi-VN"))</td>
                                    <td>
                                        @{
                                            var maxRevenue = Model.ProductSales.Max(p => p.TotalRevenue);
                                            var performance = maxRevenue > 0 ? (product.TotalRevenue / maxRevenue) * 100 : 0;
                                        }
                                        <div class="performance-bar">
                                            <div class="performance-fill" style="width: @performance%"></div>
                                            <span class="performance-text">@performance.ToString("F0")%</span>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <div class="no-data">
                        <i class="fas fa-chart-bar"></i>
                        <h3>Chưa có dữ liệu bán hàng</h3>
                        <p>Dữ liệu sẽ hiển thị khi có giao dịch bán hàng</p>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
.analytics-container {
    max-width: 140rem;
    margin: 0 auto;
}

.page-header {
    text-align: center;
    margin-bottom: 3rem;
}

.page-header h1 {
    color: #8B4513;
    font-size: 3rem;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
}

.page-header p {
    color: #6c757d;
    font-size: 1.6rem;
}

.chart-section {
    margin-bottom: 3rem;
}

.chart-card, .table-card {
    background: white;
    border-radius: 1rem;
    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    overflow: hidden;
}

.chart-header, .table-header {
    background: linear-gradient(135deg, #8B4513, #A0522D);
    color: white;
    padding: 2rem;
}

.chart-header h3, .table-header h3 {
    margin: 0;
    font-size: 1.8rem;
    display: flex;
    align-items: center;
    gap: 1rem;
}

.chart-container {
    padding: 3rem;
    height: 400px;
    position: relative;
}

.table-container {
    overflow-x: auto;
}

.analytics-table {
    width: 100%;
    border-collapse: collapse;
}

.analytics-table th,
.analytics-table td {
    padding: 1.5rem;
    text-align: left;
    border-bottom: 1px solid #dee2e6;
}

.analytics-table th {
    background-color: #f8f9fa;
    font-weight: 600;
    color: #495057;
}

.analytics-table tbody tr:hover {
    background-color: #f8f9fa;
}

.product-name {
    display: flex;
    align-items: center;
    gap: 0.8rem;
    font-weight: 500;
}

.product-name i {
    color: #8B4513;
}

.quantity-badge {
    background: #e3f2fd;
    color: #1976d2;
    padding: 0.5rem 1rem;
    border-radius: 2rem;
    font-weight: 600;
    font-size: 1.2rem;
}

.revenue-amount {
    color: #28a745;
    font-weight: 600;
    font-size: 1.4rem;
}

.performance-bar {
    position: relative;
    background: #e9ecef;
    height: 2.5rem;
    border-radius: 1.25rem;
    overflow: hidden;
}

.performance-fill {
    background: linear-gradient(90deg, #28a745, #20c997);
    height: 100%;
    transition: width 0.3s ease;
}

.performance-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.2rem;
    font-weight: 600;
    color: #495057;
}

.no-data {
    text-align: center;
    padding: 5rem 2rem;
    color: #6c757d;
}

.no-data i {
    font-size: 5rem;
    margin-bottom: 2rem;
    color: #dee2e6;
}

.no-data h3 {
    margin-bottom: 1rem;
    color: #495057;
}

@@media (max-width: 768px) {
    .page-header h1 {
        font-size: 2.5rem;
        flex-direction: column;
        gap: 0.5rem;
    }
    
    .chart-container {
        padding: 2rem;
        height: 300px;
    }
    
    .analytics-table {
        font-size: 1.2rem;
    }
    
    .analytics-table th,
    .analytics-table td {
        padding: 1rem;
    }
}
</style>

@section Scripts {
<script>
    // Category Chart
    const categoryData = @Html.Raw(Json.Serialize(Model.ProductsByCategory.Select(c => new { label = c.CategoryName, value = c.ProductCount })));
    
    const categoryCtx = document.getElementById('categoryChart').getContext('2d');
    new Chart(categoryCtx, {
        type: 'doughnut',
        data: {
            labels: categoryData.map(item => item.label),
            datasets: [{
                data: categoryData.map(item => item.value),
                backgroundColor: [
                    '#8B4513',
                    '#A0522D',
                    '#D2691E',
                    '#CD853F',
                    '#DEB887',
                    '#F4A460'
                ],
                borderWidth: 2,
                borderColor: '#fff'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom',
                    labels: {
                        padding: 20,
                        font: {
                            size: 14
                        }
                    }
                }
            }
        }
    });

    // Sales Chart
    const salesData = @Html.Raw(Json.Serialize(Model.ProductSales.Take(10).Select(p => new { label = p.ProductName, quantity = p.TotalQuantitySold, revenue = p.TotalRevenue })));
    
    const salesCtx = document.getElementById('salesChart').getContext('2d');
    new Chart(salesCtx, {
        type: 'bar',
        data: {
            labels: salesData.map(item => item.label),
            datasets: [{
                label: 'Số lượng bán',
                data: salesData.map(item => item.quantity),
                backgroundColor: 'rgba(139, 69, 19, 0.8)',
                borderColor: '#8B4513',
                borderWidth: 1,
                yAxisID: 'y'
            }, {
                label: 'Doanh thu (VNĐ)',
                data: salesData.map(item => item.revenue),
                backgroundColor: 'rgba(40, 167, 69, 0.8)',
                borderColor: '#28a745',
                borderWidth: 1,
                type: 'line',
                yAxisID: 'y1'
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            scales: {
                y: {
                    type: 'linear',
                    display: true,
                    position: 'left',
                    title: {
                        display: true,
                        text: 'Số lượng'
                    }
                },
                y1: {
                    type: 'linear',
                    display: true,
                    position: 'right',
                    title: {
                        display: true,
                        text: 'Doanh thu (VNĐ)'
                    },
                    grid: {
                        drawOnChartArea: false,
                    },
                }
            },
            plugins: {
                legend: {
                    position: 'top',
                }
            }
        }
    });
</script>
}
